import {decode, encode, toRGBA8} from 'lib-upng'
import isPng from 'is-png'

function _async(f) {
  return function () {
    for (var args = [], i = 0; i < arguments.length; i++) {
      args[i] = arguments[i]
    }

    try {
      return Promise.resolve(f.apply(this, args))
    } catch (e) {
      return Promise.reject(e)
    }
  }
}

function process(options) {
  options = Object.assign(
    {
      cnum: 256,
    },
    options
  )
  return _async(function (input) {
    if (!Buffer.isBuffer(input)) {
      throw new TypeError('Expected a `Buffer`, got `' + typeof input + '`.')
    }

    if (!isPng(input)) {
      return input
    }

    var img = decode(input)
    var output = Buffer.from(
      encode(
        toRGBA8(img),
        img.width,
        img.height,
        options.cnum,
        img.frames.map(function (_ref) {
          var delay = _ref.delay
          return delay
        })
      )
    )
    return output
  })
}

export default process
