"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
const os_1 = __importDefault(require("os"));
const clipboardy_1 = __importDefault(require("clipboardy"));
module.exports = (ctx) => {
    const config = (ctx) => {
        let userConfig = ctx.getConfig('picgo-plugin-autocopy');
        if (!userConfig) {
            userConfig = {};
        }
        const config = [
            {
                name: 'template',
                type: 'list',
                choices: ['markdown', 'HTML', 'URL', 'UBB', 'Custom'],
                default: 'URL'
            },
            {
                name: 'customLink',
                type: 'input',
                message: 'Please place the $url to where you want.',
                when(answer) {
                    return answer.template === 'Custom';
                },
                default: '$url'
            }
        ];
        return config;
    };
    const register = () => {
        ctx.on('finished', (msg) => {
            const customLink = ctx.getConfig('picgo-plugin-autocopy.customLink') || '$url';
            const pasteType = ctx.getConfig('picgo-plugin-autocopy.template') || 'URL';
            const tpl = url => {
                return {
                    'markdown': `![](${url})`,
                    'HTML': `<img src="${url}"/>`,
                    'URL': url,
                    'UBB': `[IMG]${url}[/IMG]`,
                    'Custom': customLink.replace(/\$url/g, url)
                };
            };
            let urls = '';
            let newline = os_1.default.platform() === 'win32' ? '\r\n' : '\n';
            msg.output.forEach(item => {
                urls += tpl(item.imgUrl)[pasteType] + newline;
            });
            clipboardy_1.default.writeSync(urls);
        });
    };
    return {
        register,
        config
    };
};
