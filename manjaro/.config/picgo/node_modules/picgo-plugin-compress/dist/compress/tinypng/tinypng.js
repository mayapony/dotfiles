"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var path = __importStar(require("path"));
var fs = __importStar(require("fs-extra"));
var getImage_1 = require("../../utils/getImage");
var config_1 = require("../../config");
var enc_base64_1 = __importDefault(require("crypto-js/enc-base64"));
var enc_utf8_1 = __importDefault(require("crypto-js/enc-utf8"));
var TinyPng = /** @class */ (function () {
    function TinyPng() {
        this.cacheConfigPath = path.join(__dirname, 'config.json');
    }
    TinyPng.prototype.init = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.PicGo = options.ctx;
                        this.options = options;
                        return [4 /*yield*/, this.readOrWriteConfig(this.options.keys)];
                    case 1:
                        _a.sent();
                        this.PicGo.log.info('TinyPng初始化');
                        return [2 /*return*/];
                }
            });
        });
    };
    TinyPng.prototype.upload = function (url) {
        return __awaiter(this, void 0, void 0, function () {
            var _a, _b, _c, _d;
            return __generator(this, function (_e) {
                switch (_e.label) {
                    case 0:
                        this.PicGo.log.info('TinyPng开始上传');
                        if (!getImage_1.isUrl(url)) return [3 /*break*/, 2];
                        _a = this.uploadImage;
                        _b = { url: url, originalUrl: url };
                        return [4 /*yield*/, this.getKey()];
                    case 1: return [2 /*return*/, _a.apply(this, [(_b.key = _e.sent(), _b)])];
                    case 2:
                        _c = this.uploadImage;
                        _d = {};
                        return [4 /*yield*/, this.getKey()];
                    case 3:
                        _d.key = _e.sent(),
                            _d.originalUrl = url;
                        return [4 /*yield*/, getImage_1.getImageBuffer(this.PicGo, url)];
                    case 4: return [2 /*return*/, _c.apply(this, [(_d.buffer = _e.sent(),
                                _d)])];
                }
            });
        });
    };
    TinyPng.prototype.getKey = function () {
        return __awaiter(this, void 0, void 0, function () {
            var config, innerKeys;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.readOrWriteConfig()];
                    case 1:
                        config = _a.sent();
                        innerKeys = Object.keys(config).filter(function (key) { return config[key].num !== -1; });
                        if (innerKeys.length <= 0) {
                            throw new Error('使用次数用完');
                        }
                        return [2 /*return*/, innerKeys[0]];
                }
            });
        });
    };
    TinyPng.prototype.uploadImage = function (options) {
        var _this = this;
        this.PicGo.log.info('使用TinypngKey:' + options.key);
        var bearer = enc_base64_1.default.stringify(enc_utf8_1.default.parse("api:" + options.key));
        var fetchOptions = {
            method: 'POST',
            url: config_1.TINYPNG_UPLOAD_URL,
            json: true,
            resolveWithFullResponse: true,
            headers: {
                Host: 'api.tinify.com',
                Authorization: "Basic " + bearer,
            },
        };
        if (options.url) {
            this.PicGo.log.info('TinyPng 上传网络图片');
            Object.assign(fetchOptions.headers, {
                'Content-Type': 'application/json',
            });
            Object.assign(fetchOptions, {
                body: {
                    source: {
                        url: options.url,
                    },
                },
            });
        }
        var req = this.PicGo.Request.request(fetchOptions);
        if (options.buffer) {
            this.PicGo.log.info('TinyPng 上传本地图片');
            req.end(options.buffer);
        }
        return req.then(function (response) {
            _this.setConfig(options.key, parseInt(response.headers['compression-count']));
            if (response.statusCode && response.statusCode >= 200 && response.statusCode <= 299) {
                console.log(response.statusCode);
                console.log(response.headers.location);
                return getImage_1.getImageBuffer(_this.PicGo, response.headers.location);
            }
            if (response.statusCode === 429) {
                _this.setConfig(options.key, -1);
                return _this.upload(options.originalUrl);
            }
            throw new Error('未知错误');
        });
    };
    TinyPng.prototype.setConfig = function (key, num) {
        return __awaiter(this, void 0, void 0, function () {
            var config;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.readOrWriteConfig()];
                    case 1:
                        config = _a.sent();
                        config[key] = {
                            key: key,
                            num: num,
                        };
                        return [4 /*yield*/, fs.writeJSON(this.cacheConfigPath, config)];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    TinyPng.prototype.readOrWriteConfig = function (keys) {
        return __awaiter(this, void 0, void 0, function () {
            var config, _a, _b, _c;
            return __generator(this, function (_d) {
                switch (_d.label) {
                    case 0:
                        config = {};
                        return [4 /*yield*/, fs.pathExists(this.cacheConfigPath)];
                    case 1:
                        if (!_d.sent()) return [3 /*break*/, 3];
                        _b = (_a = Object).assign;
                        _c = [config];
                        return [4 /*yield*/, fs.readJSON(this.cacheConfigPath)];
                    case 2:
                        _b.apply(_a, _c.concat([_d.sent()]));
                        return [3 /*break*/, 5];
                    case 3: return [4 /*yield*/, fs.writeJSON(this.cacheConfigPath, {})];
                    case 4:
                        _d.sent();
                        _d.label = 5;
                    case 5:
                        if (!keys) return [3 /*break*/, 7];
                        return [4 /*yield*/, fs.writeJSON(this.cacheConfigPath, keys.reduce(function (res, key) {
                                if (!res[key]) {
                                    res[key] = {
                                        key: key,
                                        num: 0,
                                    };
                                }
                                return res;
                            }, config))];
                    case 6:
                        _d.sent();
                        _d.label = 7;
                    case 7: return [2 /*return*/, config];
                }
            });
        });
    };
    return TinyPng;
}());
exports.default = new TinyPng();
